rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===========================================================
    // 🔐 قواعد أمان إنتاجية كاملة وآمنة لشجرة العائلة
    // ===========================================================
    
    // التحقق من المصادقة
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // التحقق من ملكية المستخدم
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // التحقق من صحة رقم الهاتف
    function hasValidPhone(phoneNumber) {
      return phoneNumber != null && 
             phoneNumber is string && 
             phoneNumber.size() >= 10 && 
             phoneNumber.size() <= 20 &&
             phoneNumber.matches('^\\+[0-9]+$');
    }
    
    // التحقق من صحة بيانات المستخدم
    function isValidUserData(data) {
      return data.keys().hasAll(['phone', 'createdAt']) &&
             hasValidPhone(data.phone) &&
             data.createdAt is timestamp;
    }
    
    // التحقق من صحة بيانات عضو العائلة
    function isValidFamilyMember(data) {
      return data.keys().hasAll(['firstName', 'relation']) &&
             data.firstName is string &&
             data.firstName.size() >= 2 &&
             data.firstName.size() <= 50 &&
             data.relation is string &&
             data.relation in ['رب العائلة', 'ابن', 'بنت', 'أخ', 'أخت', 
                              'ابن أخ', 'بنت أخ', 'ابن أخت', 'بنت أخت',
                              'حفيد', 'حفيدة', 'عم', 'عمة', 'خال', 'خالة'];
    }
    
    // التحقق من صحة روابط العائلة
    function isValidFamilyLink(data) {
      return data.keys().hasAll(['targetFamilyUid', 'linkType', 'createdAt']) &&
             data.targetFamilyUid is string &&
             data.linkType in ['parent-child', 'child-parent', 'sibling', 'marriage', 'cousin', 'extended'] &&
             data.createdAt is timestamp;
    }
    
    // التحقق من أن المستخدم يسمح بالربط
    function allowsLinking(userData) {
      return userData.get('allowFamilyLinking', true) == true;
    }
    
    // ===========================================================
    // 📱 قواعد مجموعة المستخدمين الرئيسية
    // ===========================================================
    match /users/{userId} {
      // قراءة: المستخدم نفسه + قراءة محدودة للآخرين للبحث عن العائلات
      allow read: if isAuthenticated() && (
        isOwner(userId) ||
        // السماح بقراءة البيانات الأساسية للمستخدمين الذين يسمحون بالربط
        (resource != null && allowsLinking(resource.data))
      );
      
      // كتابة: المستخدم نفسه فقط مع التحقق الشامل
      allow create: if isAuthenticated() && 
                       isOwner(userId) && 
                       isValidUserData(request.resource.data);
      
      allow update: if isAuthenticated() && 
                       isOwner(userId) && (
                         // تحديث البيانات الأساسية فقط
                         request.resource.data.diff(resource.data).affectedKeys()
                           .hasOnly(['lastLogin', 'updatedAt', 'displayName', 'linkedFamilies', 'allowFamilyLinking']) &&
                         // منع تغيير البيانات الحساسة
                         !request.resource.data.diff(resource.data).affectedKeys()
                           .hasAny(['uid', 'phone', 'createdAt'])
                       );
      
      // حذف: المستخدم نفسه فقط
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // ===========================================================
    // 👨‍👩‍👧‍👦 قواعد مجموعة أعضاء العائلة - مُحسنة للبحث والربط
    // ===========================================================
    match /users/{userId}/family/{memberId} {
      // قراءة: صاحب العائلة + المستخدمون الذين يبحثون عن العائلات للربط
      allow read: if isAuthenticated() && (
        isOwner(userId) ||
        // السماح للمستخدمين المصادق عليهم بقراءة بيانات العائلة للبحث والربط
        // شرط أن يكون صاحب العائلة يسمح بالربط
        (exists(/databases/$(database)/documents/users/$(userId)) &&
         allowsLinking(get(/databases/$(database)/documents/users/$(userId)).data))
      );
      
      // كتابة: صاحب العائلة فقط مع التحقق الشامل
      allow create: if isAuthenticated() && 
                       isOwner(userId) && 
                       isValidFamilyMember(request.resource.data);
      
      allow update: if isAuthenticated() && 
                       isOwner(userId) && 
                       isValidFamilyMember(request.resource.data) &&
                       // منع تغيير معرف العضو وتاريخ الإنشاء
                       !request.resource.data.diff(resource.data).affectedKeys()
                         .hasAny(['id', 'createdAt']);
      
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // ===========================================================
    // 🔗 قواعد الروابط بين العائلات - محسنة وآمنة
    // ===========================================================
    match /family_connections/{connectionId} {
      // قراءة: الأطراف المشاركة في الرابط
      allow read: if isAuthenticated() && 
                     resource != null && (
                       request.auth.uid == resource.data.family1Id ||
                       request.auth.uid == resource.data.family2Id
                     );
      
      // إنشاء: أحد الأطراف مع التحقق من وجود العائلات وموافقتها على الربط
      allow create: if isAuthenticated() && (
        request.auth.uid == request.resource.data.family1Id ||
        request.auth.uid == request.resource.data.family2Id
      ) &&
      // التحقق من وجود العائلات
      exists(/databases/$(database)/documents/users/$(request.resource.data.family1Id)) &&
      exists(/databases/$(database)/documents/users/$(request.resource.data.family2Id)) &&
      // التحقق من أن العائلات تسمح بالربط
      allowsLinking(get(/databases/$(database)/documents/users/$(request.resource.data.family1Id)).data) &&
      allowsLinking(get(/databases/$(database)/documents/users/$(request.resource.data.family2Id)).data) &&
      // التحقق من صحة البيانات
      request.resource.data.keys().hasAll(['family1Id', 'family2Id', 'connectionType', 'createdAt']) &&
      request.resource.data.connectionType in ['parent-child', 'sibling', 'marriage', 'cousin', 'extended'];
      
      // تحديث: الأطراف المشاركة فقط (منع تغيير الهويات)
      allow update: if isAuthenticated() && 
                       resource != null && (
                         request.auth.uid == resource.data.family1Id ||
                         request.auth.uid == resource.data.family2Id
                       ) &&
                       !request.resource.data.diff(resource.data).affectedKeys()
                         .hasAny(['family1Id', 'family2Id', 'createdAt']);
      
      // حذف: أي من الطرفين
      allow delete: if isAuthenticated() && 
                      resource != null && (
                        request.auth.uid == resource.data.family1Id ||
                        request.auth.uid == resource.data.family2Id
                      );
    }
    
    // ===========================================================
    // 📊 قواعد التحليلات والإحصائيات
    // ===========================================================
    match /analytics/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && 
                      isOwner(userId) &&
                      // منع حفظ بيانات شخصية حساسة
                      !request.resource.data.keys()
                        .hasAny(['phoneNumbers', 'personalInfo', 'addresses', 'emails']);
    }
    
    // ===========================================================
    // 🔍 قواعد فهرس البحث (للقراءة فقط)
    // ===========================================================
    match /search_index/{indexId} {
      allow read: if isAuthenticated();
      allow write: if false; // Cloud Functions فقط
    }
    
    // ===========================================================
    // 📱 قواعد إدارة الجلسات
    // ===========================================================
    match /user_sessions/{userId}/sessions/{sessionId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       request.resource.data.keys()
                         .hasAll(['deviceInfo', 'loginTime', 'lastActivity']);
      
      allow update: if isAuthenticated() && 
                       isOwner(userId) &&
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['lastActivity', 'isActive']);
      
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // ===========================================================
    // 🚨 قواعد تسجيل الأخطاء والتدقيق
    // ===========================================================
    match /audit_logs/{userId}/logs/{logId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if false; // Cloud Functions فقط
    }
    
    // ===========================================================
    // 🔄 قواعد ذاكرة التخزين المؤقت
    // ===========================================================
    match /cache/{userId}/{cacheId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && 
                      isOwner(userId) &&
                      // انتهاء صلاحية خلال 24 ساعة
                      request.resource.data.expiresAt > request.time &&
                      request.resource.data.expiresAt < request.time + duration.value(1, 'd');
      
      // حذف تلقائي للبيانات المنتهية الصلاحية
      allow delete: if isAuthenticated() && (
        isOwner(userId) ||
        (resource != null && resource.data.expiresAt < request.time)
      );
    }
    
    // ===========================================================
    // 🎭 قواعد البيانات المؤقتة للأنشطة الحية
    // ===========================================================
    match /live_activities/{activityId} {
      // قراءة للمشاركين في النشاط
      allow read: if isAuthenticated() && 
        resource != null && request.auth.uid in resource.data.get('participants', []);
      
      // كتابة للمنشئ والمشاركين
      allow write: if isAuthenticated() && (
        request.resource.data.get('createdBy', '') == request.auth.uid ||
        (resource != null && (
          request.auth.uid == resource.data.get('createdBy', '') ||
          request.auth.uid in resource.data.get('participants', [])
        ))
      ) && 
      // انتهاء صلاحية النشاط خلال ساعة واحدة
      request.resource.data.expiresAt < request.time + duration.value(1, 'h');
    }
    
    // ===========================================================
    // 🔒 قاعدة الحماية العامة - رفض كل شيء آخر
    // ===========================================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}